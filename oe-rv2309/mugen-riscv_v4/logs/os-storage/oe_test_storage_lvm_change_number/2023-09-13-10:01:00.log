+ source ../common/storage_disk_lib.sh
++ source /root/mugen/libs/locallibs/common_lib.sh
+++ python3 --version
+++ '[' 0 -eq 0 ']'
+++ source /root/mugen/libs/locallibs/common_lib_python.sh
+ main
++ type -t post_test
+ '[' -n function ']'
+ trap post_test EXIT INT HUP TERM
+ rpm -qa
+ grep expect
++ type -t config_params
+ '[' -n '' ']'
++ type -t pre_test
+ '[' -n function ']'
+ pre_test
+ LOG_INFO 'Start environment preparation.'
+ message='Start environment preparation.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Start environment preparation.'
Wed Sep 13 10:01:03 2023 - INFO  - Start environment preparation.
+ check_free_disk
++ TEST_DISK
++ id=1
++ python3 /root/mugen/libs/locallibs/get_test_device.py --device disk --node 1
+ disks='vdb vdc vdd vde'
+ disk_list=($disks)
+ local_disk=vdb
+ local_disk1=vdc
+ local_disk2=vdd
+ local_disk3=vde
+ pvcreate -y /dev/vdc
  Physical volume "/dev/vdc" successfully created.
+ vgcreate openeulertest /dev/vdc -y
  Volume group "openeulertest" successfully created
+ LOG_INFO 'Environmental preparation is over.'
+ message='Environmental preparation is over.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Environmental preparation is over.'
Wed Sep 13 10:01:11 2023 - INFO  - Environmental preparation is over.
++ type -t run_test
+ '[' -n function ']'
+ run_test
+ LOG_INFO 'Start executing testcase!'
+ message='Start executing testcase!'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Start executing testcase!'
Wed Sep 13 10:01:11 2023 - INFO  - Start executing testcase!
+ vgextend openeulertest /dev/vdb -y
  Wiping dos signature on /dev/vdb.
  Physical volume "/dev/vdb" successfully created.
  Volume group "openeulertest" successfully extended
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ vgextend openeulertest /dev/vde -y
  Physical volume "/dev/vde" successfully created.
  Volume group "openeulertest" successfully extended
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ lvcreate -L 50MB -n test openeulertest -y
  Rounding up size to full physical extent 52.00 MiB
  Logical volume "test" created.
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ lvextend -L+1G /dev/openeulertest/test -y
  Size of logical volume openeulertest/test changed from 52.00 MiB (13 extents) to 1.05 GiB (269 extents).
  Logical volume openeulertest/test successfully resized.
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ lvs -a -o name,copy_percent,devices openeulertest
  LV   Cpy%Sync Devices    
  test          /dev/vdc(0)
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ expect -c '
    set timeout 30
    spawn lvconvert -m2 openeulertest/test
    expect "*\[y/n\]*" {send "y\r"}
    expect eof
'
spawn lvconvert -m2 openeulertest/test
Are you sure you want to convert linear LV openeulertest/test to raid1 with 3 images enhancing resilience? [y/n]: y
  Logical volume openeulertest/test successfully converted.
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ lvs -a -o name,copy_percent,devices openeulertest
  LV              Cpy%Sync Devices                                           
  test            12.51    test_rimage_0(0),test_rimage_1(0),test_rimage_2(0)
  [test_rimage_0]          /dev/vdc(0)                                       
  [test_rimage_1]          /dev/vdb(1)                                       
  [test_rimage_2]          /dev/vde(1)                                       
  [test_rmeta_0]           /dev/vdc(269)                                     
  [test_rmeta_1]           /dev/vdb(0)                                       
  [test_rmeta_2]           /dev/vde(0)                                       
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ lvs -a -o name,copy_percent,devices openeulertest
  LV              Cpy%Sync Devices                                           
  test            12.51    test_rimage_0(0),test_rimage_1(0),test_rimage_2(0)
  [test_rimage_0]          /dev/vdc(0)                                       
  [test_rimage_1]          /dev/vdb(1)                                       
  [test_rimage_2]          /dev/vde(1)                                       
  [test_rmeta_0]           /dev/vdc(269)                                     
  [test_rmeta_1]           /dev/vdb(0)                                       
  [test_rmeta_2]           /dev/vde(0)                                       
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ expect -c '
    set timeout 30
    log_file testlog
    spawn lvconvert -m2 openeulertest/test /dev/vde
    expect "*\[y/n\]*" {send "y\r"}
    expect eof
'
spawn lvconvert -m2 openeulertest/test /dev/vde
Are you sure you want to convert raid1 LV openeulertest/test to 3 images enhancing resilience? [y/n]: y
  WARNING: openeulertest/test already has image count of 3.
  Logical volume openeulertest/test successfully converted.
+ grep -iE 'fail|error' testlog
+ CHECK_RESULT 1 1
+ actual_result=1
+ expect_result=1
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 1 ']'
+ '[' 0 -eq 0 ']'
+ test 1x '!=' 1x
+ return 0
+ lvs -a -o name,copy_percent,devices openeulertest
  LV              Cpy%Sync Devices                                           
  test            12.51    test_rimage_0(0),test_rimage_1(0),test_rimage_2(0)
  [test_rimage_0]          /dev/vdc(0)                                       
  [test_rimage_1]          /dev/vdb(1)                                       
  [test_rimage_2]          /dev/vde(1)                                       
  [test_rmeta_0]           /dev/vdc(269)                                     
  [test_rmeta_1]           /dev/vdb(0)                                       
  [test_rmeta_2]           /dev/vde(0)                                       
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ LOG_INFO 'End of testcase execution!'
+ message='End of testcase execution!'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'End of testcase execution!'
Wed Sep 13 10:01:17 2023 - INFO  - End of testcase execution!
+ CASE_RESULT 0
+ case_re=0
+ test -z ''
+ test 0 -eq 0
+ LOG_INFO 'succeed to execute the case.'
+ message='succeed to execute the case.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'succeed to execute the case.'
Wed Sep 13 10:01:18 2023 - INFO  - succeed to execute the case.
+ exec_result=
+ exit 0
+ post_test
+ LOG_INFO 'start environment cleanup.'
+ message='start environment cleanup.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'start environment cleanup.'
Wed Sep 13 10:01:19 2023 - INFO  - start environment cleanup.
+ lvremove -y openeulertest/test
  Logical volume "test" successfully removed.
+ vgremove -y openeulertest
  Volume group "openeulertest" successfully removed
+ pvremove /dev/vdc /dev/vdb /dev/vde
  Labels on physical volume "/dev/vdc" successfully wiped.
  Labels on physical volume "/dev/vdb" successfully wiped.
  Labels on physical volume "/dev/vde" successfully wiped.
+ rm -rf testlog
+ LOG_INFO 'Finish environment cleanup.'
+ message='Finish environment cleanup.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Finish environment cleanup.'
Wed Sep 13 10:01:20 2023 - INFO  - Finish environment cleanup.
